                     VisionLab Features Library
                  Andrea Vedaldi and Brian Fulkerson


COMPILING
  The core library and command line utilities require a common C
  compiler supporting the (old) C-90 standard (GCC and Visual C will
  do) plus a few common extension (see APPENDIX). To compile the MEX
  files, MATLAB needs also to be installed.

  LINUX AND MAC OS X. Make sure to have a recent version of GCC and
  GNU make installed. Edit the Makefile to adjust the paths to MATLAB
  and the mex command, or to disable MATLAB support. Then issue

  > cd vlfeat
  > make

  WINDOWS. We provide a Microsoft NMAKE Makefile (Makefile.mak) that
  has been tested under Visual C++ 2008 Express and Matlab R2008a (minor
  adjustments may be required for other versions). Open the Visual C terminal,
  cd into the VLFeat directory and issue.
  
  > nmake /f Makefile.mak

  If you do not have Visual C++ 2008, or you have an older version of Matlab
  and wish to compile the mex files _only_, then you may start from our binary
  distribution. Enter the toolbox directory:

  > cd toolbox

  And run our mex compilation script from the Matlab command line:

  > vl_compile

  This has been tested with Matlab R14 and lcc, but other configurations should
  only require minor tweaking.

INSTALLING
  Binaries are created in the bin/XXX directory, where XXX changes
  depending on the architecture. We support the following (the naming
  reflects MATLAB naming for MEX files):

  - mac     Mac OS X PPC
  - maci    Mac OS X Intel
  - glx     GNU Linux i386
  - g64     GNU Linux x64
  - win32   Windows

  The executable binaries can be installed anywhere in the command
  line path (the directory contains also the static library).

  MEX files are created in the toolbox/ directory and follow MATLAB
  naming conventions (so binaries for multiple architectures can
  co-exist). MEX files, along with the other M-files, should be added
  to MATLAB path, for instance by using the provided vlfeat_setup.m
  command.
  
CREATING THE DOCUMENTATION
  This task is handled by various Makefile that have been tested
  under Mac OS X and Linux only. Compiling the documentation
  requires the following additional tools
  
  - fig2dev (part of transfig)
  - a modern LaTeX with
    + pdflatex
    + dvips
    + htlatex (possibily part of TeX4ht)
    + dvipng  (possibily a separated package)
  - doxygen

  FIGURES. Figures are preprocessed by typing

  > make -C doc/figures

  However you need to run some MATLAB code to generate part
  of the figures to start with. To this end, load MATLAB and
  (provided that everything is compiled and installed correctly)
  type

  > vlfeat_demo

  TUTORIAL. To compile the tutorial, issue

  > make doc-deep
  > make doc

  SOURCE CODE DOCUMENTATION. To compile the source code
  documentation type

  > make doc-api
  
See the file doc/index.html for an overview.


APPENDIX
  CODE COMPATIBILITY. In addition to the C-90 standard, the C compiler
  is supposed to support the following common features:

  - long int (64 bit integer) support
  - variadic macro support

CHANGES
  beta-3     Completions to the ikmeans code.
  beta-2     Many completions.
  beta-1     Initial public release.
