                   VLFeat (Vision Library Features)
                            Version 0.9.15
                           The VLFeat Team

ABOUT
  The VLFeat open source library implements popular computer vision
  algorithms including SIFT, MSER, k-means, hierarchical k-means,
  agglomerative information bottleneck, and quick shift. It is written
  in C for efficiency and compatibility, with interfaces in MATLAB for
  ease of use, and detailed documentation throughout. It supports
  Windows, Mac OS X, and Linux.

  VLFeat is distributed under the BSD license (see the COPYING file).

  The documentation is available online at http://www.vlfeat.org/index.html.
  A copy is also shipped with the library in doc/index.html.

QUICKSTART WITH MATLAB
  Download the binary package of VLFeat at
  http://www.vlfeat.org/download/. Unpack the archive using WinZIP
  (Windows), double clicking on the archive (Mac), or using the
  command line (Linux and Mac):

  > tar xzf vlfeat-X.Y.Z-bin.tar.gz

  where X.Y.Z is the latest version. Start MATLAB and run the VLFeat
  setup instruction:

  > run VLFEATROOT/toolbox/vl_setup

PERMANENT INSTALLATION, COMPILING, LINKING, COMMAND LINE UTILITIES
  See the instructions at:

  * Installing permanently in MATLAB: http://www.vlfeat.org/install-matlab.html
  * Using the command line utilities: http://www.vlfeat.org/install-shell.html
  * Linking to your C program: http://www.vlfeat.org/install-c.html
  * Compiling from source: http://www.vlfeat.org/compiling.html

CHANGES
  0.9.15     Added VL_HOG() (HOG features). Added IHASHSUM (hashed
             counting). Improved INTHIST (integral histogram). Added
             VL_CUMMAX(). Improved the implementation of VL_ROC() and
             VL_PR(). Added VL_DET() (Detection Error Trade-off (DET)
             curves). Improved the verbosity control to AIB. Added
             support for Xcode 4.3, improved support for past and
             future Xcode versions. Completed the migration of the old
             test code in toolbox/test, moving the functionality to
             the new unit tests toolbox/xtest. Credited authorship to
             the VLFeat Team.
  0.9.14     Added SLIC superpixels. Added VL_ALPHANUM(). Improved
             Windows binary package and added support for Visual
             Studio 2010. Improved the documentation layout and added
             a proper bibliography. Bugfixes and other minor
             improvements. Moved from the GPL to the less restrictive
             BSD license.
  0.9.13     Fixes Windows binary package.
  0.9.12     Fixes vl_compile and the architecture string on Linux 32 bit.
  0.9.11     Fixes a compatibility problem on older Mac OS X versions.
             A few bugfixes are included too.
  0.9.10     Improves the homogeneous kernel map. Plenty of small tweaks
             and improvements. Make maci64 the default architecture on
             the Mac.
  0.9.9      Added: sift matching example. Extended Caltech-101
             classification example to use kd-trees.
  0.9.8      Added: image distance transform, PEGASOS, floating point
             K-means, homogeneous kernel maps, a Caltech-101
             classification example. Improved documentation.
  0.9.7      Changed the Mac OS X binary distribution to require
             a less recent version of Mac OS X (10.5).
  0.9.6      Changed the GNU/Linux binary distribution to require
             a less recent version of the C library.
  0.9.5      Added kd-tree and new SSE-accelerated vector/histogram
             comparison code.  Improved dense SIFT (dsift) implementation.
             Added Snow Leopard and MATLAB R2009b support.
  0.9.4      Added quick shift. Renamed dhog to dsift and improved
             implementation and documentation. Improved tutorials.
             Added 64 bit Windows binaries. Many other small changes.
  0.9.3      Namespace change (everything begins with a vl_ prefix
             now). Many other changes to provide compilation support
             on Windows with MATLAB 7.
  beta-3     Completions to the ikmeans code.
  beta-2     Many completions.
  beta-1     Initial public release.
