function test_hikmeans
% TEST_HIKMEANS Test IKMEANS and HIKMEANS

K       = 3 ;
nleaves = 100 ;
data    = uint8(rand(2,10000) * 255) ;
datat   = uint8(rand(2,100000)* 255) ;

[centers,asgn] = ikmeans(data,K) ;
asgnt = ikmeanspush(datat,centers) ;

figure(1000) ; clf ; hold on ;
hold on ;
colors = get(gca,'ColorOrder') ;
ncolors = size(colors,1) ;
for k=1:10
  sel=find(asgn==k) ;  
  plot(data(1,sel),data(2,sel),'.','Color',colors(mod(k,ncolors)+1,:)) ;
  sel=find(asgnt==k) ;
  plot(datat(1,sel),datat(2,sel),'+','Color',colors(mod(k,ncolors)+1,:)) ;  
end
plot(centers(1,:),centers(2,:),'ro') ;

[tree,asgn] = hikmeans(data,K,nleaves) ;
[asgnt]     = hikmeanspush(tree,datat) ;

figure(1001) ; clf ; 
plottree(tree) ;
 
figure(1002) ; clf ; hold on ;
hold on ;
colors = get(gca,'ColorOrder') ;
ncolors = size(colors,1) ;
for k=1:10
  sel=find(asgn(end,:)==k) ;  
  plot(data(1,sel),data(2,sel),'.','Color',colors(mod(k,ncolors)+1,:)) ;
  sel=find(asgnt(end,:)==k) ;
  plot(datat(1,sel),datat(2,sel),'+','Color',colors(mod(k,ncolors)+1,:)) ;  
end
h=plottree(tree) ;
set(h,'LineWidth',4) ;

% --------------------------------------------------------------------
function h=plottree(tree)
% --------------------------------------------------------------------
% PLOTTRE  Plot hierarchical K-means tree
%   PLOTTREE(TREE) plots a tree generated by HIKMEASN(). 
%
%   See also HIKMEANS().

x1=[] ;
x2=[] ;
for c=1:size(tree.centers,2)
  [x1p x2p]=xplot(tree.centers(:,c), tree.sub(c)) ;
  x1 = [x1 x1p] ;
  x2 = [x2 x2p] ;
end
h=line(x1(:),x2(:)) ;

% --------------------------------------------------------------------
function [x1,x2]=xplot(X,tree)
% --------------------------------------------------------------------
x1=[] ;
x2=[] ;
if(~isstruct(tree)), return ; end ;

C  = size(tree.centers,2) ;
x1 = [double(X(1))*ones(1,C); double(tree.centers(1,:)); nan*ones(1,C)] ;
x2 = [double(X(2))*ones(1,C); double(tree.centers(2,:)); nan*ones(1,C)] ;


if(any(x1>300)), keyboard ;end

if ~isempty(tree.sub)
  for c=1:C
    [x1p x2p]=xplot(tree.centers(:,c), tree.sub(c)) ;
    x1 = [x1 x1p] ;
    x2 = [x2 x2p] ;
  end
end

